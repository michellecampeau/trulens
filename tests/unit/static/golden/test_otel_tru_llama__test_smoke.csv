,record,event_id,record_attributes,record_type,resource_attributes,start_timestamp,timestamp,trace
0,"{'name': 'root', 'kind': 1, 'parent_span_id': '', 'status': 'STATUS_CODE_UNSET'}",16141994013972124659,"{'name': 'root', 'ai_observability.span_type': 'record_root', 'ai_observability.domain': 'module', 'ai_observability.app_name': 'Simple RAG', 'ai_observability.app_version': 'v1', 'ai_observability.record_id': '1daca4c0-42bf-41b1-b83c-6a79552276db', 'ai_observability.run_name': 'test run', 'ai_observability.input_id': '42', 'ai_observability.record_root.app_name': 'Simple RAG', 'ai_observability.record_root.app_version': 'v1', 'ai_observability.record_root.record_id': '1daca4c0-42bf-41b1-b83c-6a79552276db'}",EventRecordType.SPAN,"{'telemetry.sdk.language': 'python', 'telemetry.sdk.name': 'opentelemetry', 'telemetry.sdk.version': '1.28.2', 'service.name': 'trulens'}",2025-01-24 15:38:30.232848,2025-01-24 15:38:30.426131,"{'trace_id': '179682083322566053687124621161543412423', 'parent_id': '', 'span_id': '16141994013972124659'}"
1,"{'name': 'llama_index.core.base.base_query_engine.BaseQueryEngine.query', 'kind': 1, 'parent_span_id': '16141994013972124659', 'status': 'STATUS_CODE_UNSET'}",2552522454676708649,"{'name': 'llama_index.core.base.base_query_engine.BaseQueryEngine.query', 'ai_observability.span_type': 'main', 'ai_observability.domain': 'module', 'ai_observability.app_name': 'Simple RAG', 'ai_observability.app_version': 'v1', 'ai_observability.record_id': '1daca4c0-42bf-41b1-b83c-6a79552276db', 'ai_observability.run_name': 'test run', 'ai_observability.input_id': '42', 'ai_observability.main.main_input': 'What is multi-headed attention?', 'ai_observability.main.main_output': 'Context information is below.\n---------------------\npage_label: 4\nfile_path: tests/unit/data/attention_is_all_you_need.pdf\n\nScaled Dot-Product Attention\n Multi-Head Attention\nFigure 2: (left) Scaled Dot-Product Attention. (right) Multi-Head Attention consists of several\nattention layers running in parallel.\nof the values, where the weight assigned to each value is computed by a compatibility function of the\nquery with the corresponding key.\n3.2.1 Scaled Dot-Product Attention\nWe call our particular attention ""Scaled Dot-Product Attention"" (Figure 2).\n\npage_label: 5\nfile_path: tests/unit/data/attention_is_all_you_need.pdf\n\noutput values. These are concatenated and once again projected, resulting in the final values, as\ndepicted in Figure 2.\nMulti-head attention allows the model to jointly attend to information from different representation\nsubspaces at different positions. With a single attention head, averaging inhibits this.\n\npage_label: 2\nfile_path: tests/unit/data/attention_is_all_you_need.pdf\n\nThis makes\nit more difficult to learn dependencies between distant positions [ 12]. In the Transformer this is\nreduced to a constant number of operations, albeit at the cost of reduced effective resolution due\nto averaging attention-weighted positions, an effect we counteract with Multi-Head Attention as\ndescribed in section 3.2.\nSelf-attention, sometimes called intra-attention is an attention mechanism relating different positions\nof a single sequence in order to compute a representation of the sequence.\n---------------------\nGiven the context information and not prior knowledge, answer the query.\nQuery: What is multi-headed attention?\nAnswer: '}",EventRecordType.SPAN,"{'telemetry.sdk.language': 'python', 'telemetry.sdk.name': 'opentelemetry', 'telemetry.sdk.version': '1.28.2', 'service.name': 'trulens'}",2025-01-24 15:38:30.232902,2025-01-24 15:38:30.426114,"{'trace_id': '179682083322566053687124621161543412423', 'parent_id': '16141994013972124659', 'span_id': '2552522454676708649'}"
2,"{'name': 'llama_index.core.query_engine.retriever_query_engine.RetrieverQueryEngine.retrieve', 'kind': 1, 'parent_span_id': '2552522454676708649', 'status': 'STATUS_CODE_UNSET'}",7294888860536248326,"{'name': 'llama_index.core.query_engine.retriever_query_engine.RetrieverQueryEngine.retrieve', 'ai_observability.span_type': 'unknown', 'ai_observability.domain': 'module', 'ai_observability.app_name': 'Simple RAG', 'ai_observability.app_version': 'v1', 'ai_observability.record_id': '1daca4c0-42bf-41b1-b83c-6a79552276db', 'ai_observability.run_name': 'test run', 'ai_observability.input_id': '42', 'ai_observability.unknown.query_bundle': 'What is multi-headed attention?', 'ai_observability.unknown.return': ['Node ID: eb518b21-46da-4a22-bf93-26b06ea9ad49\nText: Scaled Dot-Product Attention  Multi-Head Attention Figure 2:\n(left) Scaled Dot-Product Attention. (right) Multi-Head Attention\nconsists of several attention layers running in parallel. of the\nvalues, where the weight assigned to each value is computed by a\ncompatibility function of the query with the corresponding key. 3.2.1\nScaled Dot-Product A...\nScore:  0.856\n', 'Node ID: c0012bde-76e7-41d1-b3a5-d778ac28a87a\nText: output values. These are concatenated and once again projected,\nresulting in the final values, as depicted in Figure 2. Multi-head\nattention allows the model to jointly attend to information from\ndifferent representation subspaces at different positions. With a\nsingle attention head, averaging inhibits this.\nScore:  0.854\n', 'Node ID: 6760e8d0-36e8-4f59-8b9b-0b6793883504\nText: This makes it more difficult to learn dependencies between\ndistant positions [ 12]. In the Transformer this is reduced to a\nconstant number of operations, albeit at the cost of reduced effective\nresolution due to averaging attention-weighted positions, an effect we\ncounteract with Multi-Head Attention as described in section 3.2.\nSelf-attention,...\nScore:  0.848\n']}",EventRecordType.SPAN,"{'telemetry.sdk.language': 'python', 'telemetry.sdk.name': 'opentelemetry', 'telemetry.sdk.version': '1.28.2', 'service.name': 'trulens'}",2025-01-24 15:38:30.233040,2025-01-24 15:38:30.413634,"{'trace_id': '179682083322566053687124621161543412423', 'parent_id': '2552522454676708649', 'span_id': '7294888860536248326'}"
3,"{'name': 'llama_index.core.base.base_retriever.BaseRetriever.retrieve', 'kind': 1, 'parent_span_id': '7294888860536248326', 'status': 'STATUS_CODE_UNSET'}",15070099392629235682,"{'name': 'llama_index.core.base.base_retriever.BaseRetriever.retrieve', 'ai_observability.span_type': 'unknown', 'ai_observability.domain': 'module', 'ai_observability.app_name': 'Simple RAG', 'ai_observability.app_version': 'v1', 'ai_observability.record_id': '1daca4c0-42bf-41b1-b83c-6a79552276db', 'ai_observability.run_name': 'test run', 'ai_observability.input_id': '42', 'ai_observability.unknown.str_or_query_bundle': 'What is multi-headed attention?', 'ai_observability.unknown.return': ['Node ID: eb518b21-46da-4a22-bf93-26b06ea9ad49\nText: Scaled Dot-Product Attention  Multi-Head Attention Figure 2:\n(left) Scaled Dot-Product Attention. (right) Multi-Head Attention\nconsists of several attention layers running in parallel. of the\nvalues, where the weight assigned to each value is computed by a\ncompatibility function of the query with the corresponding key. 3.2.1\nScaled Dot-Product A...\nScore:  0.856\n', 'Node ID: c0012bde-76e7-41d1-b3a5-d778ac28a87a\nText: output values. These are concatenated and once again projected,\nresulting in the final values, as depicted in Figure 2. Multi-head\nattention allows the model to jointly attend to information from\ndifferent representation subspaces at different positions. With a\nsingle attention head, averaging inhibits this.\nScore:  0.854\n', 'Node ID: 6760e8d0-36e8-4f59-8b9b-0b6793883504\nText: This makes it more difficult to learn dependencies between\ndistant positions [ 12]. In the Transformer this is reduced to a\nconstant number of operations, albeit at the cost of reduced effective\nresolution due to averaging attention-weighted positions, an effect we\ncounteract with Multi-Head Attention as described in section 3.2.\nSelf-attention,...\nScore:  0.848\n']}",EventRecordType.SPAN,"{'telemetry.sdk.language': 'python', 'telemetry.sdk.name': 'opentelemetry', 'telemetry.sdk.version': '1.28.2', 'service.name': 'trulens'}",2025-01-24 15:38:30.233057,2025-01-24 15:38:30.413377,"{'trace_id': '179682083322566053687124621161543412423', 'parent_id': '7294888860536248326', 'span_id': '15070099392629235682'}"
4,"{'name': 'llama_index.core.indices.vector_store.retrievers.retriever.VectorIndexRetriever._retrieve', 'kind': 1, 'parent_span_id': '15070099392629235682', 'status': 'STATUS_CODE_UNSET'}",6427152483389270765,"{'name': 'llama_index.core.indices.vector_store.retrievers.retriever.VectorIndexRetriever._retrieve', 'ai_observability.span_type': 'unknown', 'ai_observability.domain': 'module', 'ai_observability.app_name': 'Simple RAG', 'ai_observability.app_version': 'v1', 'ai_observability.record_id': '1daca4c0-42bf-41b1-b83c-6a79552276db', 'ai_observability.run_name': 'test run', 'ai_observability.input_id': '42', 'ai_observability.unknown.query_bundle': 'What is multi-headed attention?', 'ai_observability.unknown.return': ['Node ID: eb518b21-46da-4a22-bf93-26b06ea9ad49\nText: Scaled Dot-Product Attention  Multi-Head Attention Figure 2:\n(left) Scaled Dot-Product Attention. (right) Multi-Head Attention\nconsists of several attention layers running in parallel. of the\nvalues, where the weight assigned to each value is computed by a\ncompatibility function of the query with the corresponding key. 3.2.1\nScaled Dot-Product A...\nScore:  0.856\n', 'Node ID: c0012bde-76e7-41d1-b3a5-d778ac28a87a\nText: output values. These are concatenated and once again projected,\nresulting in the final values, as depicted in Figure 2. Multi-head\nattention allows the model to jointly attend to information from\ndifferent representation subspaces at different positions. With a\nsingle attention head, averaging inhibits this.\nScore:  0.854\n', 'Node ID: 6760e8d0-36e8-4f59-8b9b-0b6793883504\nText: This makes it more difficult to learn dependencies between\ndistant positions [ 12]. In the Transformer this is reduced to a\nconstant number of operations, albeit at the cost of reduced effective\nresolution due to averaging attention-weighted positions, an effect we\ncounteract with Multi-Head Attention as described in section 3.2.\nSelf-attention,...\nScore:  0.848\n']}",EventRecordType.SPAN,"{'telemetry.sdk.language': 'python', 'telemetry.sdk.name': 'opentelemetry', 'telemetry.sdk.version': '1.28.2', 'service.name': 'trulens'}",2025-01-24 15:38:30.233198,2025-01-24 15:38:30.412856,"{'trace_id': '179682083322566053687124621161543412423', 'parent_id': '15070099392629235682', 'span_id': '6427152483389270765'}"
5,"{'name': 'llama_index.core.response_synthesizers.compact_and_refine.CompactAndRefine.get_response', 'kind': 1, 'parent_span_id': '2552522454676708649', 'status': 'STATUS_CODE_UNSET'}",6792987977405066332,"{'name': 'llama_index.core.response_synthesizers.compact_and_refine.CompactAndRefine.get_response', 'ai_observability.span_type': 'unknown', 'ai_observability.domain': 'module', 'ai_observability.app_name': 'Simple RAG', 'ai_observability.app_version': 'v1', 'ai_observability.record_id': '1daca4c0-42bf-41b1-b83c-6a79552276db', 'ai_observability.run_name': 'test run', 'ai_observability.input_id': '42', 'ai_observability.unknown.query_str': 'What is multi-headed attention?', 'ai_observability.unknown.text_chunks': ['page_label: 4\nfile_path: tests/unit/data/attention_is_all_you_need.pdf\n\nScaled Dot-Product Attention\n Multi-Head Attention\nFigure 2: (left) Scaled Dot-Product Attention. (right) Multi-Head Attention consists of several\nattention layers running in parallel.\nof the values, where the weight assigned to each value is computed by a compatibility function of the\nquery with the corresponding key.\n3.2.1 Scaled Dot-Product Attention\nWe call our particular attention ""Scaled Dot-Product Attention"" (Figure 2).', 'page_label: 5\nfile_path: tests/unit/data/attention_is_all_you_need.pdf\n\noutput values. These are concatenated and once again projected, resulting in the final values, as\ndepicted in Figure 2.\nMulti-head attention allows the model to jointly attend to information from different representation\nsubspaces at different positions. With a single attention head, averaging inhibits this.', 'page_label: 2\nfile_path: tests/unit/data/attention_is_all_you_need.pdf\n\nThis makes\nit more difficult to learn dependencies between distant positions [ 12]. In the Transformer this is\nreduced to a constant number of operations, albeit at the cost of reduced effective resolution due\nto averaging attention-weighted positions, an effect we counteract with Multi-Head Attention as\ndescribed in section 3.2.\nSelf-attention, sometimes called intra-attention is an attention mechanism relating different positions\nof a single sequence in order to compute a representation of the sequence.'], 'ai_observability.unknown.return': 'Context information is below.\n---------------------\npage_label: 4\nfile_path: tests/unit/data/attention_is_all_you_need.pdf\n\nScaled Dot-Product Attention\n Multi-Head Attention\nFigure 2: (left) Scaled Dot-Product Attention. (right) Multi-Head Attention consists of several\nattention layers running in parallel.\nof the values, where the weight assigned to each value is computed by a compatibility function of the\nquery with the corresponding key.\n3.2.1 Scaled Dot-Product Attention\nWe call our particular attention ""Scaled Dot-Product Attention"" (Figure 2).\n\npage_label: 5\nfile_path: tests/unit/data/attention_is_all_you_need.pdf\n\noutput values. These are concatenated and once again projected, resulting in the final values, as\ndepicted in Figure 2.\nMulti-head attention allows the model to jointly attend to information from different representation\nsubspaces at different positions. With a single attention head, averaging inhibits this.\n\npage_label: 2\nfile_path: tests/unit/data/attention_is_all_you_need.pdf\n\nThis makes\nit more difficult to learn dependencies between distant positions [ 12]. In the Transformer this is\nreduced to a constant number of operations, albeit at the cost of reduced effective resolution due\nto averaging attention-weighted positions, an effect we counteract with Multi-Head Attention as\ndescribed in section 3.2.\nSelf-attention, sometimes called intra-attention is an attention mechanism relating different positions\nof a single sequence in order to compute a representation of the sequence.\n---------------------\nGiven the context information and not prior knowledge, answer the query.\nQuery: What is multi-headed attention?\nAnswer: '}",EventRecordType.SPAN,"{'telemetry.sdk.language': 'python', 'telemetry.sdk.name': 'opentelemetry', 'telemetry.sdk.version': '1.28.2', 'service.name': 'trulens'}",2025-01-24 15:38:30.413878,2025-01-24 15:38:30.425826,"{'trace_id': '179682083322566053687124621161543412423', 'parent_id': '2552522454676708649', 'span_id': '6792987977405066332'}"
6,"{'name': 'llama_index.core.response_synthesizers.refine.Refine.get_response', 'kind': 1, 'parent_span_id': '6792987977405066332', 'status': 'STATUS_CODE_UNSET'}",5261396450126043535,"{'name': 'llama_index.core.response_synthesizers.refine.Refine.get_response', 'ai_observability.span_type': 'unknown', 'ai_observability.domain': 'module', 'ai_observability.app_name': 'Simple RAG', 'ai_observability.app_version': 'v1', 'ai_observability.record_id': '1daca4c0-42bf-41b1-b83c-6a79552276db', 'ai_observability.run_name': 'test run', 'ai_observability.input_id': '42', 'ai_observability.unknown.query_str': 'What is multi-headed attention?', 'ai_observability.unknown.text_chunks': ['page_label: 4\nfile_path: tests/unit/data/attention_is_all_you_need.pdf\n\nScaled Dot-Product Attention\n Multi-Head Attention\nFigure 2: (left) Scaled Dot-Product Attention. (right) Multi-Head Attention consists of several\nattention layers running in parallel.\nof the values, where the weight assigned to each value is computed by a compatibility function of the\nquery with the corresponding key.\n3.2.1 Scaled Dot-Product Attention\nWe call our particular attention ""Scaled Dot-Product Attention"" (Figure 2).\n\npage_label: 5\nfile_path: tests/unit/data/attention_is_all_you_need.pdf\n\noutput values. These are concatenated and once again projected, resulting in the final values, as\ndepicted in Figure 2.\nMulti-head attention allows the model to jointly attend to information from different representation\nsubspaces at different positions. With a single attention head, averaging inhibits this.\n\npage_label: 2\nfile_path: tests/unit/data/attention_is_all_you_need.pdf\n\nThis makes\nit more difficult to learn dependencies between distant positions [ 12]. In the Transformer this is\nreduced to a constant number of operations, albeit at the cost of reduced effective resolution due\nto averaging attention-weighted positions, an effect we counteract with Multi-Head Attention as\ndescribed in section 3.2.\nSelf-attention, sometimes called intra-attention is an attention mechanism relating different positions\nof a single sequence in order to compute a representation of the sequence.'], 'ai_observability.unknown.prev_response': 'None', 'ai_observability.unknown.return': 'Context information is below.\n---------------------\npage_label: 4\nfile_path: tests/unit/data/attention_is_all_you_need.pdf\n\nScaled Dot-Product Attention\n Multi-Head Attention\nFigure 2: (left) Scaled Dot-Product Attention. (right) Multi-Head Attention consists of several\nattention layers running in parallel.\nof the values, where the weight assigned to each value is computed by a compatibility function of the\nquery with the corresponding key.\n3.2.1 Scaled Dot-Product Attention\nWe call our particular attention ""Scaled Dot-Product Attention"" (Figure 2).\n\npage_label: 5\nfile_path: tests/unit/data/attention_is_all_you_need.pdf\n\noutput values. These are concatenated and once again projected, resulting in the final values, as\ndepicted in Figure 2.\nMulti-head attention allows the model to jointly attend to information from different representation\nsubspaces at different positions. With a single attention head, averaging inhibits this.\n\npage_label: 2\nfile_path: tests/unit/data/attention_is_all_you_need.pdf\n\nThis makes\nit more difficult to learn dependencies between distant positions [ 12]. In the Transformer this is\nreduced to a constant number of operations, albeit at the cost of reduced effective resolution due\nto averaging attention-weighted positions, an effect we counteract with Multi-Head Attention as\ndescribed in section 3.2.\nSelf-attention, sometimes called intra-attention is an attention mechanism relating different positions\nof a single sequence in order to compute a representation of the sequence.\n---------------------\nGiven the context information and not prior knowledge, answer the query.\nQuery: What is multi-headed attention?\nAnswer: '}",EventRecordType.SPAN,"{'telemetry.sdk.language': 'python', 'telemetry.sdk.name': 'opentelemetry', 'telemetry.sdk.version': '1.28.2', 'service.name': 'trulens'}",2025-01-24 15:38:30.424554,2025-01-24 15:38:30.425759,"{'trace_id': '179682083322566053687124621161543412423', 'parent_id': '6792987977405066332', 'span_id': '5261396450126043535'}"
7,"{'name': 'llama_index.core.llms.mock.MockLLM.complete', 'kind': 1, 'parent_span_id': '5261396450126043535', 'status': 'STATUS_CODE_UNSET'}",5799772328993504078,"{'name': 'llama_index.core.llms.mock.MockLLM.complete', 'ai_observability.span_type': 'unknown', 'ai_observability.domain': 'module', 'ai_observability.app_name': 'Simple RAG', 'ai_observability.app_version': 'v1', 'ai_observability.record_id': '1daca4c0-42bf-41b1-b83c-6a79552276db', 'ai_observability.run_name': 'test run', 'ai_observability.input_id': '42', 'ai_observability.unknown.formatted': True, 'ai_observability.unknown.args': ['Context information is below.\n---------------------\npage_label: 4\nfile_path: tests/unit/data/attention_is_all_you_need.pdf\n\nScaled Dot-Product Attention\n Multi-Head Attention\nFigure 2: (left) Scaled Dot-Product Attention. (right) Multi-Head Attention consists of several\nattention layers running in parallel.\nof the values, where the weight assigned to each value is computed by a compatibility function of the\nquery with the corresponding key.\n3.2.1 Scaled Dot-Product Attention\nWe call our particular attention ""Scaled Dot-Product Attention"" (Figure 2).\n\npage_label: 5\nfile_path: tests/unit/data/attention_is_all_you_need.pdf\n\noutput values. These are concatenated and once again projected, resulting in the final values, as\ndepicted in Figure 2.\nMulti-head attention allows the model to jointly attend to information from different representation\nsubspaces at different positions. With a single attention head, averaging inhibits this.\n\npage_label: 2\nfile_path: tests/unit/data/attention_is_all_you_need.pdf\n\nThis makes\nit more difficult to learn dependencies between distant positions [ 12]. In the Transformer this is\nreduced to a constant number of operations, albeit at the cost of reduced effective resolution due\nto averaging attention-weighted positions, an effect we counteract with Multi-Head Attention as\ndescribed in section 3.2.\nSelf-attention, sometimes called intra-attention is an attention mechanism relating different positions\nof a single sequence in order to compute a representation of the sequence.\n---------------------\nGiven the context information and not prior knowledge, answer the query.\nQuery: What is multi-headed attention?\nAnswer: '], 'ai_observability.unknown.kwargs': ""{'formatted': True}"", 'ai_observability.unknown.return': 'Context information is below.\n---------------------\npage_label: 4\nfile_path: tests/unit/data/attention_is_all_you_need.pdf\n\nScaled Dot-Product Attention\n Multi-Head Attention\nFigure 2: (left) Scaled Dot-Product Attention. (right) Multi-Head Attention consists of several\nattention layers running in parallel.\nof the values, where the weight assigned to each value is computed by a compatibility function of the\nquery with the corresponding key.\n3.2.1 Scaled Dot-Product Attention\nWe call our particular attention ""Scaled Dot-Product Attention"" (Figure 2).\n\npage_label: 5\nfile_path: tests/unit/data/attention_is_all_you_need.pdf\n\noutput values. These are concatenated and once again projected, resulting in the final values, as\ndepicted in Figure 2.\nMulti-head attention allows the model to jointly attend to information from different representation\nsubspaces at different positions. With a single attention head, averaging inhibits this.\n\npage_label: 2\nfile_path: tests/unit/data/attention_is_all_you_need.pdf\n\nThis makes\nit more difficult to learn dependencies between distant positions [ 12]. In the Transformer this is\nreduced to a constant number of operations, albeit at the cost of reduced effective resolution due\nto averaging attention-weighted positions, an effect we counteract with Multi-Head Attention as\ndescribed in section 3.2.\nSelf-attention, sometimes called intra-attention is an attention mechanism relating different positions\nof a single sequence in order to compute a representation of the sequence.\n---------------------\nGiven the context information and not prior knowledge, answer the query.\nQuery: What is multi-headed attention?\nAnswer: '}",EventRecordType.SPAN,"{'telemetry.sdk.language': 'python', 'telemetry.sdk.name': 'opentelemetry', 'telemetry.sdk.version': '1.28.2', 'service.name': 'trulens'}",2025-01-24 15:38:30.425308,2025-01-24 15:38:30.425628,"{'trace_id': '179682083322566053687124621161543412423', 'parent_id': '5261396450126043535', 'span_id': '5799772328993504078'}"
